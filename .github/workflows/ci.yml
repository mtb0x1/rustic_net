name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build (release+parallel)
      run: cargo build --release --features parallel --verbose
    
    # TODO: buggy on ci
    #- name: Run tests (release+parallel)
    #  run: cargo test --release --features parallel --verbose
    
    - name: Build (release)
      run: cargo build --release --verbose

    - name: Run tests (release)
      run: cargo test --release --verbose

    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run Clippy
      run: cargo clippy -- -D warnings

    - name: Run Clippy (release+parallel)
      run: cargo clippy --features parallel -- -D warnings 

    - name: Generate docs
      run: |
        cargo doc --document-private-items
        # Create a simple index.html to redirect to the main crate documentation
        echo '<!DOCTYPE html>
        <html>
        <head>
            <meta http-equiv="refresh" content="0; url=./rustic_net/index.html" />
        </head>
        <body>
            <p>Redirecting to <a href="./rustic_net/index.html">documentation</a>...</p>
        </body>
        </html>' > target/doc/index.html
    
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: target/doc/
        retention-days: 1

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download documentation artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: ./public
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generated: true
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4